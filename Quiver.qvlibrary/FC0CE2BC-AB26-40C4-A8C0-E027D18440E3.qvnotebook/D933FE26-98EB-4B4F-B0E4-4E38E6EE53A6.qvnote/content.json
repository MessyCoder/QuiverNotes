{
  "title": "第一章 Apache Tomcat 7介绍",
  "cells": [
    {
      "type": "text",
      "data": "<h1>关于Apache Tomcat服务器</h1><div>Apache Tomcat 服务器是一个开源的，基于Java的web应用容器，可以用来运行Servlet以及JSP。它曾是Apach-Jakarta的一个子项目；不过，由于Tomcat是在很流行，他现在被当成Apache的一个单独项目，由Java开源社区的一群志愿者维护。</div><div><br></div><div>Apache Tomcat非常稳定，<span style=\"line-height: 1.4;\">虽然它使用\"开源Apache证书\"，却</span><span style=\"line-height: 1.4;\">拥有一个商业web服务器的所有功能。它的每个版本都对应一个特定的Java Servlet API，JSP，以及JDK的版本。</span></div><div><code></code></div><div><span style=\"background-color: rgb(254, 250, 0); color: rgb(50, 50, 50); line-height: 1.4;\">Apache Tomcat 7 目前支持Servlet API 3.0 ， JSP API 2.2。需要JDK 1.6作为运行时环境。</span></div>"
    },
    {
      "type": "text",
      "data": "<h1>Tomcat的架构</h1><div>Tomcat容器的最顶层组件就是Tomcat的服务器，一个JVM实例中仅能存在一个Tomcat服务器的实例。Tomcat实例由各种小容器组合而成，这其中最重要的是Catalina Servlet引擎：</div>"
    },
    {
      "type": "code",
      "language": "xml",
      "data": "<Server>\r\n    <Service>\r\n        <Connector />\r\n        <Engine>\r\n            <Host>\r\n                <Context> </Context>\r\n            </Host>\r\n        </Engine>\r\n    </Service>\r\n</Server>"
    },
    {
      "type": "text",
      "data": "<div>其中的Server， Service，Connector等都称作容器。默认情况下，这些容器都是由server.xml文件所配置的。</div><h2><ul><li><span style=\"font-size: 13px; line-height: 1.4; font-weight: normal;\">Server代表的是Tomcat服务器实例。&lt;Server&gt;元素下可以包含一个或多个&nbsp;&lt;Service&gt;容器。</span></li><li><span style=\"font-size: 13px; line-height: 1.4; font-weight: normal;\">Service中有多个Connector容器和一个Engine容器。Server节点下可能有多个Service节点。</span></li><li><span style=\"font-size: 13px; line-height: 1.4; font-weight: normal;\">Connector中定义了实际处理客户端请求和响应的类。</span></li><li><span style=\"font-size: 13px; line-height: 1.4; font-weight: normal;\">一个Service容器中金能有一个Engine，引擎处理所有Connector接收到的请求。</span></li><li><span style=\"font-size: 13px; line-height: 1.4; font-weight: normal;\">Host是定义虚拟主机的地方。每一个Host都可以是一个或多个Web应用的父容器。</span></li><li><span style=\"font-size: 13px; line-height: 1.4; font-weight: normal;\">一个Context代表一个Web应用。</span></li></ul></h2><h1>安装和配置Tomcat</h1><div>安装之前先确认一下Tomcat的前提条件。</div><div><span style=\"line-height: 1.4;\"><br></span></div><div><span style=\"line-height: 1.4;\">下载软件：</span></div><div><ol><li><span style=\"line-height: 1.4;\">在&nbsp;</span><span style=\"line-height: 1.4;\">http://tomcat.apache.org</span><span style=\"line-height: 1.4;\">&nbsp;下载Tomcat。</span></li><li><span style=\"line-height: 1.4;\">在 www.java.com/en/download/index.jsp 下载Java 1.6</span></li><ol><li><span style=\"line-height: 1.4;\">如果是在Ubuntu下：</span><span style=\"font-family: Menlo, Consolas, 'Ubuntu Mono', Monaco, source-code-pro, monospace; font-size: 11px; line-height: 1.4;\">sudo apt-get install sun-java6-jdk</span></li></ol></ol><div><font>设置环境变量：</font></div></div><div><ol><li><font>设置 JAVA_HOME 为JDK的根目录。</font></li><li><font>设置&nbsp;CATALINA_HOME 为Tomcat的根目录。</font></li></ol><div><br></div><div>Tomcat默认会接收来自8080端口的请求，如果要改变该默认设置需要修改&nbsp;CATALINA_HOME/conf/server.xml 文件。</div><div>找到下面的代码片段：</div></div>"
    },
    {
      "type": "code",
      "language": "xml",
      "data": "<!-- Define a non-SSL HTTP/1.1 Connector on port 8080 -->\r\n<Connector className=\"org.apache.catalina.connector.http.HttpConnector\" port=\"8080\"\r\nminProcessors=\"5\" maxProcessors=\"75\" acceptCount=\"10\" debug=\"0\"/>"
    },
    {
      "type": "text",
      "data": "中的port = \"8080\" 改为：port = \"80\""
    },
    {
      "type": "code",
      "language": "xml",
      "data": "<!-- Define a non-SSL HTTP/1.1 Connector on port 80 -->\r\n<Connector className=\"org.apache.catalina.connector.http.HttpConnector\" port=\"80\"\r\nminProcessors=\"5\" maxProcessors=\"75\" acceptCount=\"10\" debug=\"0\"/>"
    },
    {
      "type": "text",
      "data": "<div>更改之后重新启动服务器以使修改生效。</div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div>"
    }
  ]
}